buildscript {
	ext { springBootVersion = '2.0.0.RELEASE' }
	repositories { mavenCentral() 
		maven {
		url "https://plugins.gradle.org/m2/"
	}
		
	}
	dependencies { 
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")  }
}

apply plugin: "org.sonarqube"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'pmd'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
//Hajó


repositories { mavenCentral() }


dependencies {
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile("com.h2database:h2")
	testCompile("junit:junit")
}

task sourcesJar(type: Jar) {
	baseName archivesBaseName
	classifier 'sources'
	from sourceSets.main.allSource
}

task javaDocJar(type: Jar, dependsOn: javadoc) {
	baseName archivesBaseName
	classifier 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javaDocJar
}

apply plugin: 'distribution'

distributions {
	main {
		baseName = archivesBaseName
		contents {
			from { libsDir }
		}
	}
	docs {
		baseName = "archivesBaseName-docs"
		contents {
			from (libsDir) {
				include sourcesJar.archiveName
				include javaDocJar.archiveName
			}
		}
	}
		
}

apply plugin: 'maven-publish'

publishing {
	publications {
		helloWorld(MavenPublication) {
			from components.java
			artifactId 'hello-world-sajat'
		}
	}
}

